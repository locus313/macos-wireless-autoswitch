name: Validate Core Files

on:
  push:
    paths:
      - 'wireless.sh'
      - 'install.sh'
      - 'com.computernetworkbasics.wifionoff.plist'
  pull_request:
    paths:
      - 'wireless.sh'
      - 'install.sh'
      - 'com.computernetworkbasics.wifionoff.plist'

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install validation tools
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck libxml2-utils
    
    - name: Validate shell scripts
      run: |
        echo "üîç Validating shell scripts..."
        
        # Check if wireless.sh exists and is executable
        if [ -f "wireless.sh" ]; then
          echo "‚úÖ wireless.sh exists"
          
          # Check shebang
          if head -n1 wireless.sh | grep -q "#!/bin/bash"; then
            echo "‚úÖ wireless.sh has correct shebang"
          else
            echo "‚ùå wireless.sh missing or incorrect shebang"
            exit 1
          fi
          
          # Run shellcheck
          echo "üîç Running shellcheck on wireless.sh..."
          shellcheck wireless.sh || echo "‚ö†Ô∏è Shellcheck warnings found in wireless.sh"
          
          # Check for required functions/commands
          if grep -q "networksetup" wireless.sh; then
            echo "‚úÖ wireless.sh contains networksetup commands"
          else
            echo "‚ùå wireless.sh missing networksetup commands"
            exit 1
          fi
          
          if grep -q "setairportpower" wireless.sh; then
            echo "‚úÖ wireless.sh contains WiFi control logic"
          else
            echo "‚ùå wireless.sh missing WiFi control logic"
            exit 1
          fi
        else
          echo "‚ùå wireless.sh not found"
          exit 1
        fi
        
        # Check install.sh
        if [ -f "install.sh" ]; then
          echo "‚úÖ install.sh exists"
          
          # Check shebang
          if head -n1 install.sh | grep -q "#!/bin/bash"; then
            echo "‚úÖ install.sh has correct shebang"
          else
            echo "‚ùå install.sh missing or incorrect shebang"
            exit 1
          fi
          
          # Run shellcheck
          echo "üîç Running shellcheck on install.sh..."
          shellcheck install.sh || echo "‚ö†Ô∏è Shellcheck warnings found in install.sh"
          
          # Check for required paths
          if grep -q "/Library/Scripts/NetBasics" install.sh; then
            echo "‚úÖ install.sh contains correct installation path"
          else
            echo "‚ùå install.sh missing installation path"
            exit 1
          fi
          
          if grep -q "/Library/LaunchDaemons" install.sh; then
            echo "‚úÖ install.sh contains LaunchDaemon path"
          else
            echo "‚ùå install.sh missing LaunchDaemon path"
            exit 1
          fi
        else
          echo "‚ùå install.sh not found"
          exit 1
        fi
    
    - name: Validate plist file
      run: |
        echo "üîç Validating plist file..."
        
        if [ -f "com.computernetworkbasics.wifionoff.plist" ]; then
          echo "‚úÖ Plist file exists"
          
          # Validate XML structure
          if xmllint --noout com.computernetworkbasics.wifionoff.plist; then
            echo "‚úÖ Plist file has valid XML structure"
          else
            echo "‚ùå Plist file has invalid XML structure"
            exit 1
          fi
          
          # Check for required keys
          if grep -q "<key>Label</key>" com.computernetworkbasics.wifionoff.plist; then
            echo "‚úÖ Plist contains Label key"
          else
            echo "‚ùå Plist missing Label key"
            exit 1
          fi
          
          if grep -q "<key>ProgramArguments</key>" com.computernetworkbasics.wifionoff.plist; then
            echo "‚úÖ Plist contains ProgramArguments key"
          else
            echo "‚ùå Plist missing ProgramArguments key"
            exit 1
          fi
          
          if grep -q "<key>WatchPaths</key>" com.computernetworkbasics.wifionoff.plist; then
            echo "‚úÖ Plist contains WatchPaths key"
          else
            echo "‚ùå Plist missing WatchPaths key"
            exit 1
          fi
          
          if grep -q "/Library/Scripts/NetBasics/wireless.sh" com.computernetworkbasics.wifionoff.plist; then
            echo "‚úÖ Plist references correct script path"
          else
            echo "‚ùå Plist missing or incorrect script path"
            exit 1
          fi
          
          if grep -q "/Library/Preferences/SystemConfiguration" com.computernetworkbasics.wifionoff.plist; then
            echo "‚úÖ Plist watches correct system path"
          else
            echo "‚ùå Plist missing or incorrect watch path"
            exit 1
          fi
        else
          echo "‚ùå Plist file not found"
          exit 1
        fi
    
    - name: Check file permissions
      run: |
        echo "üîç Checking recommended file permissions..."
        
        # Check if shell scripts are executable
        if [ -x "wireless.sh" ]; then
          echo "‚úÖ wireless.sh is executable"
        else
          echo "‚ö†Ô∏è wireless.sh is not executable (will be set during installation)"
        fi
        
        if [ -x "install.sh" ]; then
          echo "‚úÖ install.sh is executable"
        else
          echo "‚ö†Ô∏è install.sh is not executable"
          echo "üí° Consider running: chmod +x install.sh"
        fi
    
    - name: Validate macOS compatibility
      run: |
        echo "üîç Checking macOS compatibility markers..."
        
        # Check for OS version detection
        if grep -q "uname -a" wireless.sh; then
          echo "‚úÖ OS version detection present"
        else
          echo "‚ùå OS version detection missing"
          exit 1
        fi
        
        # Check for supported OS versions
        if grep -q "22|23|24" wireless.sh; then
          echo "‚úÖ Supported macOS versions defined (Ventura, Sonoma, Sequoia)"
        else
          echo "‚ùå macOS version support not properly defined"
          exit 1
        fi
        
        # Check for networksetup usage
        if grep -q "networksetup.*listnetworkserviceorder" wireless.sh; then
          echo "‚úÖ Network interface detection present"
        else
          echo "‚ùå Network interface detection missing"
          exit 1
        fi
    
    - name: Summary
      run: |
        echo ""
        echo "üéâ Validation completed successfully!"
        echo "‚úÖ All core files are properly formatted and contain required components"
        echo "‚úÖ Shell scripts pass basic syntax validation"
        echo "‚úÖ Plist file has valid XML structure and required keys"
        echo "‚úÖ macOS compatibility checks passed"